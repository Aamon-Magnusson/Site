<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Aamon&#39;s site</title>
    <link>http://aamon.xyz/posts/</link>
    <description>Recent content in Posts on Aamon&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Aamon Magnusson - 2022</copyright>
    <lastBuildDate>Tue, 29 Nov 2022 22:10:35 -0700</lastBuildDate><atom:link href="http://aamon.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tmux</title>
      <link>http://aamon.xyz/posts/tmux/</link>
      <pubDate>Tue, 29 Nov 2022 22:10:35 -0700</pubDate>
      
      <guid>http://aamon.xyz/posts/tmux/</guid>
      <description>Intro tmux is a well known terminal multiplexer. I like to think of it as a window manager for within terminal sessions. Allowing the user to have multiple terminal sessions within a single terminal session, in the form of splits or tabs.
I&amp;rsquo;m going to be honest, I&amp;rsquo;ve been against learning tmux for some time. I found that DWM was enough terminal control for me, until I started using server ssh sessions more often.</description>
      <content>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt; is a well known &lt;em&gt;terminal multiplexer&lt;/em&gt;.
I like to think of it as a window manager for within terminal sessions.
Allowing the user to have multiple terminal sessions within a single terminal session, in the form of splits or tabs.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to be honest, I&amp;rsquo;ve been against learning &lt;code&gt;tmux&lt;/code&gt; for some time.
I found that &lt;code&gt;DWM&lt;/code&gt; was enough terminal control for me, until I started using server &lt;code&gt;ssh&lt;/code&gt; sessions more often.
I&amp;rsquo;m no server admin, but just using &lt;code&gt;ssh&lt;/code&gt; for this site, and some work I do is enough for me to begin to appreciate being able to use multiple terminal sessions.
(Now I just run a &lt;code&gt;kali&lt;/code&gt; laptop behind me and use &lt;code&gt;ssh&lt;/code&gt; to run whatever I need on that machine)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DWM&lt;/code&gt; allows me to show as many terminals as I want at a given time, or to put them over top of each other.
However, if I&amp;rsquo;m using &lt;code&gt;ssh&lt;/code&gt; it will not use the same session.
What I had done in the past was just open up the &lt;code&gt;ssh&lt;/code&gt; session in the new terminal should I need it, but this gets annoying, especially if I&amp;rsquo;m using Windows.
Now with the use of &lt;code&gt;tmux&lt;/code&gt; I do much more from the same window.
As I write this I still have 3 terminal windows open at the same time, but each is running a different machine&amp;rsquo;s shell.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;keybindings&#34;&gt;Keybindings&lt;/h1&gt;
&lt;p&gt;As it is a terminal program the most important thing to learn are keybindings.
I have not changed any keybindings, as this makes it easier to jump between different machines.&lt;/p&gt;
&lt;p&gt;The most important keybinding is going to be the &lt;em&gt;&lt;strong&gt;prefix&lt;/strong&gt;&lt;/em&gt;.
The prefix is what tells &lt;code&gt;tmux&lt;/code&gt; that you are telling it to do something, and not some other program.
The default is &lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;.
The &lt;em&gt;pre&lt;/em&gt;fix will lead each command, similar to the &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; key in &lt;code&gt;Vim&lt;/code&gt;.
Like &lt;code&gt;&amp;lt;C-b&amp;gt; c&lt;/code&gt;, for example.&lt;/p&gt;
&lt;p&gt;Here are some basics that I&amp;rsquo;m using to get used to &lt;code&gt;tmux&lt;/code&gt;.
Don&amp;rsquo;t want to force too many, but these ones I find useful from the stat.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;C-b&amp;gt; c New tab
&amp;lt;C-b&amp;gt; &amp;#34; New horizontal split
&amp;lt;C-b&amp;gt; % New vertical split

&amp;lt;C-b&amp;gt; &amp;amp; Close tab
&amp;lt;C-b&amp;gt; x Close split
&amp;lt;C-b&amp;gt; d Detach from session

&amp;lt;C-b&amp;gt; n Next tab
&amp;lt;C-b&amp;gt; p Previous tab
&amp;lt;C-b&amp;gt; &amp;lt;number&amp;gt; Move to respective tab
&amp;lt;C-b&amp;gt; &amp;lt;arrow key&amp;gt; Move to respective split

&amp;lt;C-b&amp;gt; , Rename tab

&amp;lt;C-b&amp;gt; [ Allow scrollback with arrow keys

&amp;lt;C-b&amp;gt; ? Help menu for keybindings
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;I am far from an advanced &lt;code&gt;tmux&lt;/code&gt; user.
But I think the keybindings above should make for an easy entry into &lt;code&gt;tmux&lt;/code&gt;.
Pretty much just tabs and splits.&lt;/p&gt;
&lt;p&gt;I plan on eventually getting into the world of scripting with &lt;code&gt;tmux&lt;/code&gt; as it could be very powerful with terminal automation.
I haven&amp;rsquo;t quite found a use case for it yet, but once I don I&amp;rsquo;ll write about it.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Vim</title>
      <link>http://aamon.xyz/posts/vim/</link>
      <pubDate>Mon, 21 Nov 2022 20:18:28 -0700</pubDate>
      
      <guid>http://aamon.xyz/posts/vim/</guid>
      <description>Intro Vi, Vim, Neovim&amp;hellip;
The Vi based text editors are known for their complexity, nuance, and speed, for those who learn it.
I happen to love using Neovim as my primary text editor, and find it super beneficial to writing and editing text files. I do try to use text files more often than the average person, using Markdown where ever possible over Word, or other word processors, for example.</description>
      <content>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Vi&lt;/code&gt;, &lt;code&gt;Vim&lt;/code&gt;, &lt;code&gt;Neovim&lt;/code&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Vi&lt;/code&gt; based text editors are known for their complexity, nuance, and speed, for those who learn it.&lt;/p&gt;
&lt;p&gt;I happen to love using &lt;code&gt;Neovim&lt;/code&gt; as my primary text editor, and find it super beneficial to writing and editing text files.
I do try to use text files more often than the average person, using &lt;code&gt;Markdown&lt;/code&gt; where ever possible over Word, or other word processors, for example.&lt;/p&gt;
&lt;p&gt;This post will go over the way I learned &lt;code&gt;Vim&lt;/code&gt;, and how I would recommend someone you learn it.
(Pretty much all &lt;code&gt;Vim&lt;/code&gt;-like text editors will apply to this post, as I will barely go into configuration, it&amp;rsquo;s all about the &lt;code&gt;Vim&lt;/code&gt;-like actions)&lt;/p&gt;
&lt;h1 id=&#34;vimtutor&#34;&gt;&lt;code&gt;vimtutor&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;The first step should always be &lt;code&gt;vimtutor&lt;/code&gt;.
Just run the program in your terminal, and the team behind &lt;code&gt;Vim&lt;/code&gt; will show you some important first keybindings.
It is not expected that you learn everything there, but a good portion of them are very useful.
Like you should know &lt;code&gt;hjkl&lt;/code&gt;, &lt;code&gt;dcyp&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;, &lt;code&gt;iaIA&lt;/code&gt;, &lt;code&gt;vV&amp;lt;c-v&amp;gt;&lt;/code&gt;, &lt;code&gt;ggG&amp;lt;c-d&amp;gt;&amp;lt;c-u&amp;gt;&lt;/code&gt;, and of course &lt;code&gt;:q&lt;/code&gt; and &lt;code&gt;:wq&lt;/code&gt;.
If after &lt;code&gt;vimtutor&lt;/code&gt; any of these groups, and letters don&amp;rsquo;t make sense, I would recommend going back and reviewing what they mean.
By no means would I expect you to be able to use these super quick either, that will take practice, but the exposure is what will get you started.&lt;/p&gt;
&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;
&lt;p&gt;I know I said I wouldn&amp;rsquo;t go into configuration, but there are some defaults that I feel should come default.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re running standard &lt;code&gt;Vim&lt;/code&gt; your configuration is done in &lt;code&gt;~/.vimrc&lt;/code&gt;.
For &lt;code&gt;Neovim&lt;/code&gt; it&amp;rsquo;s in &lt;code&gt;~/.config/nvim/init.vim&lt;/code&gt; or &lt;code&gt;init.lua&lt;/code&gt; if you want to get fancy.
(I would recommend the &lt;code&gt;init.vim&lt;/code&gt; for now, just keeps it the same as &lt;code&gt;Vim&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;The classic way to configure &lt;code&gt;Vim&lt;/code&gt; is with &lt;code&gt;Vimscript&lt;/code&gt;, a language made for &lt;code&gt;Vim&lt;/code&gt;.
Below are some simple configurations I would make to a new config:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-vimscript&#34; data-lang=&#34;vimscript&#34;&gt;&amp;#34; Line numbers (This is really important)
set nu
set relativenumber
&amp;#34; Get rid of those annoying errorbells
set noerrorbells
&amp;#34; I like 4 space tabs, fight me
set tabstop=4
set shiftwidth=4
&amp;#34; Get syntax highlighting
syntax enable

&amp;#34; More advanced but comes default in Neovim
&amp;#34; Keeps Y more consistent with the other capital letters
nmap Y y$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;These are the absolute bare minimum configurations I would use, but you may come to see that many write far more into their configs.
As I do as well.
I wouldn&amp;rsquo;t recommend you go too crazy for now, as it&amp;rsquo;s good to learn the basics of &lt;code&gt;Vim&lt;/code&gt; before adding features, and you may be surprised, &lt;code&gt;Vim&lt;/code&gt; can do a heck of a lot.
In in any case, you would like to see my real configs just check out &lt;a href=&#34;https://github.com/Aamon-Magnusson/Dotfiles/tree/main/nvim&#34;&gt;my Dotfiles&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;From there I would recommend using &lt;code&gt;Vim&lt;/code&gt; or &lt;code&gt;Neovim&lt;/code&gt;.
Try to use the keybindings I mentioned above in the &lt;a href=&#34;#vimtutor&#34;&gt;&lt;code&gt;vimtutor&lt;/code&gt; section&lt;/a&gt;.
Adding stuff like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-vimscript&#34; data-lang=&#34;vimscript&#34;&gt;nnoremap &amp;lt;Up&amp;gt; &amp;lt;Nop&amp;gt;
nnoremap &amp;lt;Down&amp;gt; &amp;lt;Nop&amp;gt;
nnoremap &amp;lt;Left&amp;gt; &amp;lt;Nop&amp;gt;
nnoremap &amp;lt;Right&amp;gt; &amp;lt;Nop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Could help force you into &lt;code&gt;Vim&lt;/code&gt; motions, but I never did that.
Many do recommend it, IDK.
¯\_(ツ)_/¯&lt;/p&gt;
&lt;p&gt;As you learn what you can&amp;rsquo;t do with these simple motions Google if there&amp;rsquo;s a &lt;code&gt;Vim&lt;/code&gt; way to go it.
You should also end up learning the &lt;code&gt;:help&lt;/code&gt; pages.
They take some practice but can be handy.&lt;/p&gt;
&lt;p&gt;From there I would slowly adding keybindings.
Add a leader key:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-vimscript&#34; data-lang=&#34;vimscript&#34;&gt;set mapleader = &amp;#34; &amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And map any little functions you want.
Like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-vimscript&#34; data-lang=&#34;vimscript&#34;&gt;&amp;#34; Enable spell check
nnoremap &amp;lt;leader&amp;gt;se :set spell spelllang=en_ca&amp;lt;CR&amp;gt;
nnoremap &amp;lt;leader&amp;gt;sf :set spell spelllang=fr_ca&amp;lt;CR&amp;gt;
nnoremap &amp;lt;leader&amp;gt;so :set nospell&amp;lt;CR&amp;gt;

&amp;#34; Fix last spelling error
function! FixLastSpellingError()
  normal! mm[s1z=`m&amp;#34;
endfunction
nnoremap &amp;lt;leader&amp;gt;sl :call FixLastSpellingError()&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For example.&lt;/p&gt;
&lt;p&gt;Some can be just commands you don&amp;rsquo;t want to remember, or type in over and over again.
Or you can add functionality through the power of &lt;code&gt;Vimscript&lt;/code&gt;.
(Or &lt;code&gt;Lua&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;After that you can always add plugins, I just feel this should be the last step, and only add what you think you&amp;rsquo;re missing.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;And there&amp;rsquo;s how I would recommend learning &lt;code&gt;Vim&lt;/code&gt;.
Keep in mind this is not a fast process.
It took me about a year, to finally get comfortable in &lt;code&gt;Vim&lt;/code&gt;.
And even then it was continuous improvement to my config, and my skills.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Next Cloud</title>
      <link>http://aamon.xyz/posts/nextcloud/</link>
      <pubDate>Sat, 19 Nov 2022 11:18:22 -0700</pubDate>
      
      <guid>http://aamon.xyz/posts/nextcloud/</guid>
      <description>As should already be known, I&amp;rsquo;m hosting this site off of my Raspberry Pi 4. Since my goal with is it to make it the best server for myself that I can, it is now running my own NextCloud instance.
NextCloud is an open open-source alternative to Google Drive, OneDrive, or Dropbox. As with the other services, you can pay for cloud hosted access, which makes it feel like all the other cloud shares.</description>
      <content>&lt;p&gt;As should already be known, I&amp;rsquo;m hosting this site off of my Raspberry Pi 4.
Since my goal with is it to make it the best server &lt;strong&gt;for myself&lt;/strong&gt; that I can, it is now running my own &lt;code&gt;NextCloud&lt;/code&gt; instance.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NextCloud&lt;/code&gt; is an open open-source alternative to Google Drive, OneDrive, or Dropbox.
As with the other services, you can pay for cloud hosted access, which makes it feel like all the other cloud shares.
(While being open-source, which is still cool)
What makes &lt;code&gt;NextCloud&lt;/code&gt; special is that you can also self host your own instance.&lt;/p&gt;
&lt;p&gt;They have a few options for hosting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Snap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VM image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I initially tried to get the all-in-one &lt;code&gt;Docker&lt;/code&gt; image working, as I&amp;rsquo;ve had a little experience with &lt;code&gt;Docker&lt;/code&gt; from building a &lt;code&gt;CTF&lt;/code&gt; in work.
For what ever reason copy pasting the command from the Github didn&amp;rsquo;t work, even though it was the &amp;ldquo;Command for arm64 CPUs like the Raspberry Pi 4&amp;rdquo;.
I found that fairly strange, as &lt;code&gt;Docker&lt;/code&gt; and other container systems are meant to make running programs work on whatever system.
Whatever, I just decided to run the &lt;code&gt;Snap&lt;/code&gt; which seems like the preferred method by Linux users.&lt;/p&gt;
&lt;p&gt;In the past I&amp;rsquo;ve not been a fan of &lt;code&gt;Snap&lt;/code&gt;, but when I think about it as a &lt;code&gt;Docker&lt;/code&gt; replacement I&amp;rsquo;m more of a fan already.&lt;/p&gt;
&lt;p&gt;To get an instance running with &lt;code&gt;Snap&lt;/code&gt; you only need to run one command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo snap install nextcloud
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which is really cool!!!&lt;/p&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;However, I have some more specific needs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I can&amp;rsquo;t have it running on port 80, as that&amp;rsquo;s where the &lt;code&gt;apache2&lt;/code&gt; server is running.&lt;/li&gt;
&lt;li&gt;I want to have all the data running on an external drive, so that it does not impact the system storage.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While these sound specific, they are not difficult to setup.&lt;/p&gt;
&lt;p&gt;First I had to set an environment variable.
&lt;code&gt;$SNAP_COMMON&lt;/code&gt; is the variable that controls where the data goes.
To set it for all users creating a file in &lt;code&gt;/etc/profile.d&lt;/code&gt; with the export will do it.
I created a file called &lt;code&gt;nextCloud.sh&lt;/code&gt; and wrote the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export SNAP_COMMON&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/media/aamonm/Small&lt;span style=&#34;color:#ae81ff&#34;&gt;\ &lt;/span&gt;Drive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And for the other requirements I ran the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo snap connect nextcloud:removable-media
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo snap connect nextcloud:network-observe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo snap set nextcloud ports.http&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;81&lt;/span&gt; ports.https&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;444&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Other than that, I opened my browser to &lt;a href=&#34;http://aamonserver:81&#34;&gt;aamonserver:81&lt;/a&gt; and completed the setup.&lt;/p&gt;
&lt;p&gt;I now have my own &lt;em&gt;cloud&lt;/em&gt; share, so that&amp;rsquo;s pretty cool, and useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is only accessible from inside my home network at the moment (Same as the site itself)&lt;/li&gt;
&lt;li&gt;I have not set up certificates, since I can&amp;rsquo;t do that on port 81 or 444, which is where I want it.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Hugo Setup</title>
      <link>http://aamon.xyz/posts/hugosetup/</link>
      <pubDate>Thu, 17 Nov 2022 19:16:25 -0700</pubDate>
      
      <guid>http://aamon.xyz/posts/hugosetup/</guid>
      <description>This site is written using the Hugo framework. As written on their website:
Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.
Thus far, I find those statements to be true. By the number of themes I&amp;rsquo;ve been able to find, it does seem popular. It is most definitely fast, and is fairly flexible (for what I have the skill to do this thus far).</description>
      <content>&lt;p&gt;This site is written using the &lt;code&gt;Hugo&lt;/code&gt; framework.
As written on their &lt;a href=&#34;https://gohugo.io/&#34;&gt;website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo is one of the most popular open-source static site generators.
With its amazing speed and flexibility, Hugo makes building websites fun again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thus far, I find those statements to be true.
By the number of themes I&amp;rsquo;ve been able to find, it does seem popular.
It is most definitely fast, and is fairly flexible (for what I have the skill to do this thus far).
And for the first time ever, I &lt;em&gt;might&lt;/em&gt; be having some fun writing.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Ok, so the guide of how I&amp;rsquo;ve set up this site.
I don&amp;rsquo;t plan on doing a step by step guide on how to use &lt;code&gt;Hugo&lt;/code&gt;, however the things I think are special will be mentioned.&lt;/p&gt;
&lt;p&gt;For the actual &lt;code&gt;Hugo&lt;/code&gt; stuff, I&amp;rsquo;m using the &lt;a href=&#34;https://github.com/panr/hugo-theme-terminal&#34;&gt;Terminal&lt;/a&gt; theme, written by &lt;code&gt;panr&lt;/code&gt;, which I have as a git sub module.
I guess that reminds me, this is in a git repo, so that I can edit from any device.
(It is private right now, we&amp;rsquo;ll see if that changes)
The &lt;code&gt;config.toml&lt;/code&gt; contents were copied over from &lt;code&gt;panr&lt;/code&gt;&amp;rsquo;s Github repo, so that I have all the configuration options.
Changes clearly had to be made to make it mine, which is not hard.
I then ran:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new about.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new showcase.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new _index.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And started filling the site with some content.
Like to make this post:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new posts/hugoSetup.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where I find it gets more interesting (can you tell I&amp;rsquo;m not a web dev?)	is how I have the site running in the first place.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m (at least currently) hosting this site locally off of my Raspberry Pi 4.
Nice and light weight ARM machine, that I currently don&amp;rsquo;t have too many uses for.
(I do want to self host &lt;code&gt;NextCloud&lt;/code&gt; as well, stay tuned)
I connect to the Pi through ssh, which I set a static IP within my LAN.&lt;/p&gt;
&lt;p&gt;To actually broadcast the site, I&amp;rsquo;m running &lt;code&gt;apache2&lt;/code&gt;, the tried and true.&lt;/p&gt;
&lt;p&gt;While the static IP makes it easy enough to access the site within my network, I was able to also set a local Domain Name, through my router&amp;rsquo;s &amp;ldquo;DNS Host Mapping&amp;rdquo; setting.
This makes it feel like that much more of a website, at least to me&amp;hellip;
Within my WiFi network&amp;hellip;&lt;/p&gt;
&lt;p&gt;I have also set up port forwarding to make the site accessible everywhere on the Internet.
This was much easier than expected, going into the &amp;ldquo;Port Forwarding&amp;rdquo; setting in my router.
I also purchased my own domain name, so this site can be viewed from &lt;a href=&#34;http://aamon.xyz&#34;&gt;aamon.xyz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I plan on getting a cron job working to update the site to whatever is pushed up to my &lt;code&gt;Github&lt;/code&gt;, but so far I have not been able to make that work.
Will show my steps to that at a later date.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</content>
    </item>
    
  </channel>
</rss>
